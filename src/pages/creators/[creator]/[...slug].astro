---
export const prerender = true;
import Layout from '../../../layouts/Layout.astro';
import TripMap from '../../../components/LeafletTrip.jsx';
import { getCollection, getEntries, getEntry } from 'astro:content';


export async function getStaticPaths() {
  const trips = await getCollection('trips', ({ data }) => {
    return data.stops.length > 0;
  });
  const tripsPaths = new Array();
  trips.forEach(trip => {
    const path = trip.id.split('/');
    console.log(path);
    let t = {
      'params': {
        'creator':path[0],
        'slug':path[1] + "/" + path[2]
      },
      'props': {
        'trip':trip
      }
    }
    tripsPaths.push(t);
  })
  
  return tripsPaths;
}

const { creator } = Astro.params;
const { trip } = Astro.props;

const stops = await getEntries(trip.data.stops);
const creatorData = await getEntry('creators', creator);

const dateOptions: object = {
	year: "numeric",
	month: "long",
	day: "numeric",
	timezone: "America/Chicago"
};

const pageTitle = trip.data.name + " | " + creatorData.data.name;

let youtube;

if (trip.data.source == 'youtube') {
  youtube = true;
}

---

<Layout title={pageTitle}>
  <h1>{trip.data.name}</h1>
  <h2>{creatorData.data.name}</h2>
  <p>{trip.data.postdate.toLocaleDateString('en-US', dateOptions)}</p>
  <div class="trip-page">

    <div class="trip-details">
      <p class="locations">
        {stops.map(stop => (
          // @ts-ignore
          <span>{stop.data.name} ({stop.data.code})</span>
        ))}
      </p>
      <div>
        <TripMap client:only="react" stops={stops} />
      </div>
    </div>
    <div class="trip-video">
      {youtube && <iframe src=`https://www.youtube.com/embed/${trip.data.source_id}` title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>}
    </div>

  </div>
  

</Layout>

<style  is:global>
  .trip-page {
    display: grid;
    grid-template-columns: 1fr 1.5fr;
    column-gap: 40px;;
  }
  .locations span {
    display: inline-block;
  }
   .locations span:not(:last-child):after {
      content: 'âž¡';
      margin: 0 5px;
  }
  .map-container {
    height: 450px;
    width: 100%;
    border-radius: 16px;
  }
  .leaflet-popup-content-wrapper {
    font-family: 'Overpass', sans-serif;
    font-weight: 500;
    text-align: center;
  }
  iframe {
    width: 100%;
    height: auto;
    aspect-ratio: 16/9;
    border-radius: 16px;
  }
</style>